<?php

namespace App\Http\Controllers;

use App\Models\Mnre;
use App\Models\Otp;
use App\Models\StateImplementingAgencyUser;
use App\Models\LocalbodyUser;
use App\Models\Installer;
use App\Models\Inspector;
use App\Traits\General;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Session, Hash, DB;


class ResetPassController extends Controller
{
    use General; //To use Traits
   
    public function sendOtpToUser(Request $request)
    {
        
        if($request->isMethod('get')){
            
            $auditData = array('action_type'=>'1','description'=>'View Forget Password Page', 'user_type'=>0);
            $this->auditTrail($auditData);
            return view('reset_password');
        }
        # code...
        // $SixDigitRandomNumber = rand(100000,999999);
        // echo $SixDigitRandomNumber;die;
        try{
            $validatedData = $request->validate([
                'email'=>'required',
            ]);
            $isValidUser=true;
            
            $email = $request->input('email');
            $phone=$request->input('phone');
            $user_type = $request->input('user_type');
            Otp::where('otp_title', $email)->delete(); // pichle otp ko otp table se delete kr rahe h 
            
            Session::put('user_type', $user_type);// key-> koi bhi variable le sakte h , value-> jo request k time variable liya vahi add krna h
            Session::put('email', $email);
            if($user_type == 'MNRE'){
                $mnre=Mnre::where('email',$email)->get()->first() ;
                if($mnre==null){
                    $isValidUser=false;
                }
            }if($user_type == 'STATEIMPLEMENTINGAGENCY'){
                
                $stateimplementagency=StateImplementingAgencyUser::where('email',$email)->where('phone',$phone)->get()->first();
                if($stateimplementagency==null){
                    $isValidUser=false;
                }
            }if($user_type == 'LOCALBODY'){
    
                $localbody=LocalbodyUser::where('email',$email)->where('phone',$phone)->get()->first();
                if($localbody==null){
                    $isValidUser=false;
                }
            }if($user_type == 'INSTALLER'){
                
                $intaller=Installer::where('email',$email)->where('phone',$phone)->get()->first();
                if($intaller==null){
                    $isValidUser=false;
                }
            }if($user_type == 'INSPECTOR'){
                
                $inspector=Inspector::where('email',$email)->where('phone',$phone)->get()->first();
                if($inspector==null){
                    $isValidUser=false;
                }
            }
            if($isValidUser){
                //OTP Send to Email

                $otpEmail = $this->generateOtp();
                
                
                
                $otpDataEmail= new Otp();
                $otpDataEmail->otp_title=$email;
                $otpDataEmail->otp=$otpEmail;
                $otpDataEmail->otp_type='E';
                $otpDataEmail->save();
                // $data['password'] = $password;
                // $data['unique_id'] = $uniqueId;
                // $data['agency_name'] = $agencyName; // $data m koi si b value jo hame chahiye vo dal skte hain

                // $this->sendMail('notifySNARegistration', $data, $email, 'otp to reset your password');subject=subject line like email
                // email function use kena hai
                if($user_type != 'MNRE'){
                    //OTP Send to Phone
                    $deletePhone= Otp::where('otp_title', $phone)->delete();//phone ke purane otp details ko otps table se delete krna hai 
                    Session::put('phone', $phone);
                    $otpPhone=$this->generateOtp();

                    // $otpMessage = "Dear User,".$otpPhone." is your otp to reset password";
                    // $this->sendSandesOTP($mobile,$message);

                    $otpDataPhone= new Otp();
                    $otpDataPhone->otp_title=$phone;
                    $otpDataPhone->otp=$otpPhone;
                    $otpDataPhone->otp_type='P';
                    $otpDataPhone->save();
                }
                
                /*************************Audit Trail Start**********************************/
                $auditData = array('action_type'=>'2','description'=>' OTP Generated by User','user_type'=>'1');
                $this->auditTrail($auditData);
                /*************************Audit Trail End**********************************/
                return redirect('verify-otp')->with("message","OTP Generate Successfuly !");
            }else{
                //invalid user
                /*************************Audit Trail Start**********************************/
                $auditData = array('action_type'=>'2','description'=>'User entered Invalid login id '.$email);
                $this->auditTrail($auditData);
                /*************************Audit Trail End**********************************/
                return redirect('reset-user-password')->with("error","User Invalid !");
            }
           
        }catch(Exception $ex){
            dd($ex->getMessage());
        }
        
       
    }
    public function generateOtp(){
        return rand(100000,999999);
    }

/***************change method combined use get & post**************/




    // public function verifyOtp(){
    //     //$value = session('email');
    //     //dd($value);
    //     // $value = session('user_type');
    //     //dd($value);
    //     return view('verifyOtpForm');
    // }
    public function checkOtp(Request $request)
    { 
        if($request->isMethod('get')){
            /**************Start Audit trail************/
            $auditData = array('action_type'=>1,'description'=>'Viewed Page verify OTP by User','user_type'=>0);
            $this->auditTrail($auditData);
            /**************End Audit trail************/
            return view('verifyOtpForm');
        }
        $validatedData = $request->validate([
            'email'=>'required',
            
        ]);

        $email = session('email');
        $user_type= session('user_type');
        
        $emailotp=$request->input('email');//form m user request s aa rha hai
        $emailData=Otp::where('otp',$emailotp)->where('otp_title',$email)->count();

        if($user_type != 'MNRE'){
            $phone = session('phone');
            $phoneotp=$request->input('phone');
            $phoneData=Otp::where('otp',$phoneotp)->where('otp_title',$phone)->count();
            if($emailData>0 && $phoneData >0){
            /**************Start Audit trail************/
            $auditData = array('action_type'=>1,'description'=>'OTP Vertified by User','user_type'=>0);
            $this->auditTrail($auditData);
            /**************End Audit trail************/
            return redirect('/change-password')->with('OTP Verified');
           }else{
            /**************Start Audit trail************/
            $auditData = array('action_type'=>1,'description'=>'OTP not Vertified by User','user_type'=>0);
            $this->auditTrail($auditData);
            /**************End Audit trail************/
            return redirect('/verify-otp')->with('OTP mismatch');
           }
        }else{
            if($emailData>0){
                /**************Start Audit trail************/
                $auditData = array('action_type'=>1,'description'=>'OTP Vertified by User','user_type'=>0);
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/change-password')->with("message" ,"OTP Verified");
            }else{
                /**************Start Audit trail************/
                $auditData = array('action_type'=>1,'description'=>'OTP not Vertified by User','user_type'=>0);
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/verify-otp')->with("message" , "OTP mismatch");
            }
        }
       
    }


public function updatePassword(Request $request){
    
    if($request->isMethod('get')){
        /**************Start Audit trail************/
        $auditData = array('action_type'=>1,'description'=>' Changed password Page','user_type'=>0);
        $this->auditTrail($auditData);
        /**************End Audit trail************/
        return view('change-password');
    }
    $validatedData=$request->validate([

        'password'=>'required',
        'confirm-password'=>'required',
    ]);
    $password=$request->input('password');
    $confirmPassword=$request->input('confirm-password');
    
    if($password == $confirmPassword){
        $email = session('email');
        $user_type = session('user_type');
        if($user_type == 'MNRE'){
            $mnreData=Mnre::where('email',$email)->get()->first();
            if($mnreData != null){
                $mnre=Mnre::find($mnreData->id);
                $mnre->password = Hash::make($password);
                $mnre->update();
                /**************Start Audit trail************/
                $auditData = array('action_type'=>'3','description'=>'Password Update Successfuly','user_type'=>'1');
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                //dd($mnre);
                return redirect('/login')->with('message' , 'Password Update Successfuly');
            }
        }else if($user_type == 'INSTALLER'){
            $get_installer=Installer::where('email',$email)->get()->first();
            if($get_installer != null){
                $installer=Installer::find($get_installer->id);
                $installer->password= Hash::make($password);
                $installer->update();
                /**************Start Audit trail************/
                $auditData = array('action_type'=>'3','description'=>' Changed password','user_type'=>'4');
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/login')->with('message', 'Password Update Successfuly');
            }
        }else if($user_type == 'STATEIMPLEMENTINGAGENCY'){
            $stateimplementagencyData=StateImplementingAgencyUser::where('email',$email)->get()->first();
            if($stateimplementagencyData != null){
                $stateimplementagency=stateImplementingAgencyUser::find($stateimplementagencyData->id);
                $stateimplementagency->password= Hash::make($password);
                $stateimplementagency->update();
                /**************Start Audit trail************/
                $auditData = array('action_type'=>'3','description'=>'User Changed password','user_type'=>'2');
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/login')->with('message', 'Password Update Successfuly');
            }
        }else if($user_type == 'LOCALBODY'){
            $localbodyData=LocalbodyUser::where('email',$email)->get()->first();
            if($localbodyData != null){
                $localbody=LocalbodyUser::find($localbodyData->id);
                $localbody->password= Hash::make($password);
                $localbody->update();
                /**************Start Audit trail************/
                $auditData = array('action_type'=>'3','description'=>'User Changed password','user_type'=>'3');
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/login')->with('message', 'Password Update Successfuly');
            }

        }else if ($user_type == 'INSPECTOR'){
            $inspectorData= Inspector::where('email',$email)->get()->first();
             
            if($inspectorData != null){
                $inspector=Inspector::find($inspectorData->id);
                $inspector->password=Hash::make($password);
                $inspector->update();
                /**************Start Audit trail************/
                $auditData = array('action_type'=>'3','description'=>'User Changed passward','user_type'=>'5');
                $this->auditTrail($auditData);
                /**************End Audit trail************/
                return redirect('/login')->with('message', 'Password Update Successfuly');
            }
        }
    }else{
        /**************Start Audit trail************/
        $auditData = array('action_type'=>'3','description'=>'User Changed passward','user_type'=>0);
        $this->auditTrail($auditData);
        /**************End Audit trail************/
        return redirect('/change-password')->with( "message" ,'Password not matched');
    }
   

}

}